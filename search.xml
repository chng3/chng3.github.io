<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>算法和题库练习笔记</title>
      <link href="/2022/03/13/%E7%AE%97%E6%B3%95%E5%92%8C%E9%A2%98%E5%BA%93%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2022/03/13/%E7%AE%97%E6%B3%95%E5%92%8C%E9%A2%98%E5%BA%93%E7%BB%83%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="二分查找"><a href="#二分查找" class="headerlink" title="二分查找"></a>二分查找</h2><p>伪代码及方法如下：</p><p><img src="http://img.chng.cf/uPic/屏幕快照 2022-03-09 14.37.55.png" alt="屏幕快照2022-03-0914.37.55"><br><a href="https://leetcode-cn.com/problems/binary-search/" target="_blank" rel="noopener">力扣算法题目704</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>英语语法笔记①</title>
      <link href="/2020/11/10/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E7%AC%94%E8%AE%B0%E2%91%A0/"/>
      <url>/2020/11/10/%E8%8B%B1%E8%AF%AD%E8%AF%AD%E6%B3%95%E7%AC%94%E8%AE%B0%E2%91%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="英语语法笔记①"><a href="#英语语法笔记①" class="headerlink" title="英语语法笔记①"></a>英语语法笔记①</h2><p>按照结构分类时，<strong>所有</strong>英文句子能够被分成三类：</p><ol><li>简单句：<strong>主语</strong>[^7] + <strong>谓语</strong>[^8] + <strong>宾语</strong>[^9]</li><li>并列句：<strong>主谓宾</strong>[^1]，<strong>并列词</strong>[^2] + <strong>主谓宾</strong>[^1]</li><li>复合句：<strong>主谓宾</strong>[^1][^3] ，<strong>从句引导词</strong>[^4] + <strong>主谓宾</strong>[^1][^5][^6]</li></ol><p>总结：</p><p>所有的句子构成都是基于<strong>主谓宾结构</strong>而展开的，<strong>主谓宾结构</strong>需要深入进行学习。</p><p>[^7]:主语：subject （动作的发出者）<br>[^8]:谓语：verb （动作）<br>[^9]:宾语：object （动作的承受者）<br>[^1]: 简单句<br>[^2]:比如and, or, but等<br>[^3]:主句（主导地位）大哥<br>[^4]:  比如：which, when, where…<br>[^5]: 从句（从属地位）小弟<br>[^6]: 从句类型：名词性从句(名词)、定语从句(形容词)、状语从句(副词)</p>]]></content>
      
      
      <categories>
          
          <category> 英语 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 语法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>学习乐理～大小调</title>
      <link href="/2020/10/27/%E5%A4%A7%E8%B0%83%E3%80%81%E5%B0%8F%E8%B0%83/"/>
      <url>/2020/10/27/%E5%A4%A7%E8%B0%83%E3%80%81%E5%B0%8F%E8%B0%83/</url>
      
        <content type="html"><![CDATA[<h2 id="大小调音阶排列组合"><a href="#大小调音阶排列组合" class="headerlink" title="大小调音阶排列组合"></a>大小调音阶排列组合</h2><p>大调：全全半全全全半 12345671</p><p>小调：全半全全半全全 67123456</p><p><strong>Ionian</strong> <strong>Dorian</strong> <strong>Phrygian</strong> <strong>Lydian</strong> <strong>Mixolydian</strong> <strong>Aeolian</strong> <strong>Locrian</strong></p><p>我的霹雳猫阿洛😊</p>]]></content>
      
      
      <categories>
          
          <category> Music </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大小调 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github基础使用</title>
      <link href="/2018/12/05/Github%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>/2018/12/05/Github%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Github基础使用"><a href="#Github基础使用" class="headerlink" title="Github基础使用"></a>Github基础使用</h1><h2 id="将本地仓库关联到GitHub"><a href="#将本地仓库关联到GitHub" class="headerlink" title="将本地仓库关联到GitHub"></a>将本地仓库关联到GitHub</h2><h3 id="初始化本地仓库并提交仓库文件"><a href="#初始化本地仓库并提交仓库文件" class="headerlink" title="初始化本地仓库并提交仓库文件"></a>初始化本地仓库并提交仓库文件</h3><p>要先确保操作系统已经安装了<strong>Git</strong>，之后进入本地仓库的根目录，鼠标右键选择<code>Git Bash Here</code>，接着输入以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>出现以下回应且在根目录下生成了一个隐藏的文件夹<code>.git</code><br><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxw9t5xfwhj20fq01it8l.jpg" alt><br><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxw9w20hk0j20gq01umx3.jpg" alt><br>之后，此时仓库里的文件还没有被追踪，输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add . //将仓库里的所有文件进行追踪</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxw9wvos9rj20e4026gls.jpg" alt><br>执行提交，拍摄快照</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;Started Course&quot;//&quot; &quot;里可以自定义快照的名字</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxw9xsqb8wj20fi05jwf8.jpg" alt></p><h3 id="在GitHub上创建一个项目"><a href="#在GitHub上创建一个项目" class="headerlink" title="在GitHub上创建一个项目"></a>在GitHub上创建一个项目</h3><p>GitHub主页右上角点击new repository<br><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxw9y9tnkcj20al06bab3.jpg" alt><br>输入信息，<strong>记住勾选Initialize this repository with a REAdME</strong></p><p><img src="http://img.chng.cf/uPic/ceshi.jpg" alt="ceshi"></p><p>创建后，复制项目的地址</p><p><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxw9z9g1caj20sf0eujsx.jpg" alt></p><p>回到本地仓库，使用命令，<strong>并在命令后加上你的GitHub项目的地址</strong>，也就是刚才复制的内容。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin</span><br></pre></td></tr></table></figure><p>这一步是本地和远程服务器建立联系的一步。执行成功后不会显示任何结果：<br><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxwa001gerj20fn021q37.jpg" alt></p><p>到这里，你已经成功了一半了。</p><h3 id="向远程仓库提交代码"><a href="#向远程仓库提交代码" class="headerlink" title="向远程仓库提交代码"></a>向远程仓库提交代码</h3><p>第一次向远程提交代码时得先将远程的README.md 文件同步过来，实行一下代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git pull --rebase origin master</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxwa0n36itj20db02xq38.jpg" alt></p><p>查看本地仓库是否出现README.md文件，如有，则表示拉取则成功。</p><p><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxwa1awhwuj20gp032glw.jpg" alt></p><p>接着，将进行第一次向远程同步本地仓库的内容，输入：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxwa1pgcvpj20dj0400t6.jpg" alt><br><strong>注意</strong>：过程中可能会出现一个登陆GitHub帐户的窗口，输入你的账户及密码就可以了。</p><p>最后回到GitHub主页查看是否同步即可。</p><h2 id="文件变动操作"><a href="#文件变动操作" class="headerlink" title="文件变动操作"></a>文件变动操作</h2><h3 id="本地仓库有大量变动-修改II增删-，之后想快速同步到Github远程仓库应该如何处理？"><a href="#本地仓库有大量变动-修改II增删-，之后想快速同步到Github远程仓库应该如何处理？" class="headerlink" title="本地仓库有大量变动(修改II增删)，之后想快速同步到Github远程仓库应该如何处理？"></a>本地仓库有大量变动(修改II增删)，之后想快速同步到Github远程仓库应该如何处理？</h3><p>比如我在本地有一个名为CodingAtSchool的仓库，仓库里有C语言作业文件夹和一个README文件如下图：</p><p><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxwa29yeq8j20i705hdgm.jpg" alt><br>我今天用操作鼠标做了大量对C语言目录下的改动，之后进到仓库根目录下，右键Git Bash Here，输入git status，查看仓库状态。</p><p><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxwa2m62lwj20ko0d0k3y.jpg" alt><br>oops，大量的红色数字什么鬼，这时千万别慌！如果本地仓库中含文件名为中文名称时，命令窗中提示的信息是无法显示中文的，它会把中文变成一串串数字。这时仔细观察一下，我所做的全部变动都是在C语言作业这个目录下完成的，具体变动是删除了大量文件和增加了一些文件。</p><p>第一步，分别执行以下两句命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git rm -r C语言作业/</span><br><span class="line">$ git add C语言作业/</span><br></pre></td></tr></table></figure><p>再一次查看状态 git status，发现一切的修改都已经提交到暂存区了<br><img src="http://ww1.sinaimg.cn/large/bf4c214dgy1fxwa2vktcrj20kk0cwqfy.jpg" alt></p><p>第二步，提交修改</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git commit -m &apos;我的修改&apos;</span><br></pre></td></tr></table></figure><p>第三步，推送到远程仓库</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git push origin master</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2017/12/22/hello-world/"/>
      <url>/2017/12/22/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
